---
- name: Run Blackduck
  ansible.builtin.shell: >
    bash detect8.sh
    --detect.project.name={{ blackduck_project_name }}
    --detect.project.version.name={{ blackduck_package_version }}
    --blackduck.url={{ blackduck_url }}
    --blackduck.api.token=$BLACKDUCK_TOKEN
    --detect.blackduck.scan.mode={{ blackduck_scan_mode }}
    {{ blackduck_additional_arguments }} > blackduck_output.txt
  args:
    chdir: "{{ blackduck_workspace }}"
  environment:
    BLACKDUCK_TOKEN: "{{ blackduck_secret.token }}"
  register: blackduck_result
  no_log: true
  ignore_errors: true

- name: Print Blackduck log
  ansible.builtin.command: cat blackduck_output.txt
  args:
    chdir: "{{ blackduck_workspace }}"
  register: blackduck_log

- name: Extract version using regex
  set_fact:
    blackduck_report_version: "{{ (blackduck_log | regex_search('versions/([^/]+)/components', '\\1'))[0] }}"

- name: Generate and fetch License Report
  ansible.builtin.command: python3 roles/blackduck-run/files/report-script.py
  args:
    chdir: "{{ blackduck_workspace }}"
  environment:
    BLACKDUCK_TOKEN: "{{ blackduck_secret.token }}"
    REPORT_VERSION: "{{ blackduck_report_version }}"
  no_log: true

- name: Debug status.txt
  ansible.builtin.command: cat status.txt
  args:
    chdir: "{{ blackduck_workspace }}"

- name: Debug headers.txt
  ansible.builtin.command: cat headers.txt
  args:
    chdir: "{{ blackduck_workspace }}"

- name: List files in blackduck_workspace
  ansible.builtin.find:
    paths: "{{ blackduck_workspace }}"
    recurse: yes
  register: workspace_files

- name: List files in blackduck_workspace
  ansible.builtin.debug:
    var: workspace_files

- name: Copy license-report.zip to zuul-output/logs
  copy:
    dest: "{{ ansible_user_dir }}/zuul-output/logs/"
    src: "{{ zuul.project.src_dir }}/{{ item }}"
    remote_src: true
  loop:
    - "license-report.zip"
    - "powertrain_build_ci_Black_Duck_Notices_Report.txt"
    - "powertrain_build_ci_BlackDuck_RiskReport.pdf"

- name: Return artifact to Zuul
  zuul_return:
    data:
      zuul:
        artifacts:
          - name: "{{ item }}"
            url: "{{ item }}"
  loop:
    - "license-report.zip"
    - "powertrain_build_ci_Black_Duck_Notices_Report.txt"
    - "powertrain_build_ci_BlackDuck_RiskReport.pdf"

- name: Fail the job
  ansible.builtin.fail:
    msg: "Failing the job"

- name: Fail if Black Duck return non 0 rc
  ansible.builtin.fail:
    msg: "Black Duck returned non 0 rc"
  when: blackduck_result.rc != 0

# Here is fetching the notice file, comparing it with the previous one, and updating it if there are new licenses

# linking artifacts to return to zuul web
